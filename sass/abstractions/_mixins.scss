// @file
// Custom sass mixins
//
// Define the custom mixins for your project here.
// http://sass-lang.com/docs/yardoc/file.SASS_REFERENCE.html#defining_a_mixin
@import "compass";
@import "../variables/**/*";

/**
 * functions
 */
@function strip-unit($value) {
  @return $value / ($value * 0 + 1);
}


@function pem($pxval, $base: 16) {
  @return strip-unit($pxval) / $base * 1em;
}

@function emp($emval, $base: 16) {
  @return (strip-unit($emval) * $base) + 0px;
}

/**
 * Utility Mixins
 */
@mixin hidden {
  position: absolute;
  overflow: hidden;
  display: none !important;
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px; 
  margin: -1px;
  padding: 0;
  border: 0;
}

@mixin clearfix {
  &:before, &:after {
      content: "\0020";
      display: block;
      height: 0;
      overflow: hidden;
  }
  &:after {
      clear: both;
  }
}

@mixin rwdImage {
  display: inline-block;
  min-width: 100%;
  width: 100%;
  height: auto;
  a > & {
    display: inline-block;
    vertical-align: bottom;
  }
}

@mixin zebra($child) {
  #{$child} {
    background-color: darken($lightest-grey, 2.5%);
    &:nth-child(odd) {
      background-color: lighten($lightest-grey, 2.5%);
    }
  }
}

// Makes an element visually hidden, but accessible.
// @see http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  position: absolute !important;
  height: 1px;
  width: 1px;
  overflow: hidden;
  @if $legacy-support-for-ie6 or $legacy-support-for-ie7 {
    clip: rect(1px 1px 1px 1px); // IE6 and IE7 use the wrong syntax.
  }
  clip: rect(1px, 1px, 1px, 1px);
}

// Turns off the element-invisible effect.
@mixin element-invisible-off {
  position: static !important;
  clip: auto;
  height: auto;
  width: auto;
  overflow: auto;
}

// Makes an element visually hidden by default, but visible when focused.
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}

// Vertical align mixin for elements that have equal height containers
@mixin vertical-align {
  position: relative;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
}